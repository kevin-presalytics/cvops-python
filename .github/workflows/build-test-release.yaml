
name: Build, Test, Release
on: [pull_request]
jobs:
  lint:
    name: Lint Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Virtual Environment
        uses: ./.github/actions/install_virtualenv
        with:
          python-version: "3.10"
      - name: Run linter
        run: |
          source venv/bin/activate
          lint

  test:
    name: Test Python
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Instal Ninja Build System
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install Virtual Environment
        uses: ./.github/actions/install_virtualenv
        with:
          python-version: "3.10"
      - name: Cache C Library Build Output
        uses: actions/cache@v3
        with:
          path: ./cvops-inference/build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
      # - name: Build C Library
      #   run: |
      #     source venv/bin/activate
      #     update_submodules
      #     bootstrap
      # - name: Run tests
      #   run: |
      #     source venv/bin/activate
      #     run_tests

  dockerfile:
    name: Build Dockerfile
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get short SHA
        uses: ./.github/actions/short_sha
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.get-short-sha.outputs.short-sha }},latest

        

